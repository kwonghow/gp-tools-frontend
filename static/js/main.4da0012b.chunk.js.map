{"version":3,"sources":["utils/generatePopSignature.ts","containers/HmacCalculatorPage/index.tsx","utils/generateHmacSignature.ts","containers/PopSignaturePage/index.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Buffer","__webpack_require__","d","__webpack_exports__","generatePopSignature","crypto_js__WEBPACK_IMPORTED_MODULE_0__","crypto_js__WEBPACK_IMPORTED_MODULE_0___default","n","base64UrlEncode","value","toString","replace","accessToken","dateUTC","clientSecret","date","Date","timestamp","Math","round","getTime","message","concat","signature","CryptoJS","enc","Base64","stringify","HmacSHA256","payload","time_since_epoch","sig","payloadBytes","JSON","popSignature","from","HmacCalculatorPage","_useQueryParams","useQueryParams","contentType","StringParam","headerDate","method","partnerSecret","requestBody","requestUrl","_useQueryParams2","Object","slicedToArray","params","setParams","_useState","useState","hashedPayload","hmacDigest","requestData","_useState2","result","setResult","_useState3","_useState4","errors","setErrors","_useState5","_useState6","copiedToClipboard","setCopiedToClipboard","useEffect","toUTCString","computeResults","useCallback","headerContentType","SHA256","join","generateHmacSignature","handleChange","e","newParams","objectSpread","defineProperty","target","name","curlCommand","react_default","a","createElement","Fragment","className","htmlFor","id","onChange","required","type","placeholder","rows","onClick","preventDefault","toConsumableArray","map","error","lib_default","onCopy","setTimeout","text","dangerouslySetInnerHTML","__html","PopSignaturePage","validate","newErrors","key","label","forEach","_ref","push","length","App","react_router_dom","basename","esm","ReactRouterRoute","Route","to","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4da0012b.chunk.js","sourcesContent":["import CryptoJS from 'crypto-js';\n\nexport interface Payload {\n  time_since_epoch: number;\n  sig: string;\n}\n\nconst base64UrlEncode = (value: string) =>\n  value\n    .toString()\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n\nexport default function generatePopSignature(\n  accessToken: string,\n  dateUTC: string,\n  clientSecret: string,\n) {\n  const date = new Date(dateUTC);\n\n  const timestamp = Math.round(date.getTime() / 1000);\n  const message = `${timestamp.toString()}${accessToken}`;\n\n  const signature = CryptoJS.enc.Base64.stringify(\n    CryptoJS.HmacSHA256(message, clientSecret),\n  );\n\n  const payload: Payload = {\n    time_since_epoch: timestamp,\n    sig: base64UrlEncode(signature),\n  };\n\n  const payloadBytes = JSON.stringify(payload);\n\n  const popSignature = base64UrlEncode(\n    Buffer.from(payloadBytes).toString('base64'),\n  );\n\n  return { message, payload, popSignature };\n}\n","import React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport { StringParam, useQueryParams } from 'use-query-params';\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\nimport generateHmacSignature from '../../utils/generateHmacSignature';\n\ninterface Result {\n  hashedPayload: string;\n  hmacDigest: string;\n  requestData: string;\n}\n\nconst HmacCalculatorPage = () => {\n  const [params, setParams] = useQueryParams({\n    contentType: StringParam,\n    headerDate: StringParam,\n    method: StringParam,\n    partnerSecret: StringParam,\n    requestBody: StringParam,\n    requestUrl: StringParam,\n  });\n\n  const [result, setResult] = useState<Result>({\n    hashedPayload: '',\n    hmacDigest: '',\n    requestData: '',\n  });\n\n  const [errors, setErrors] = useState<string[]>([]);\n  const [copiedToClipboard, setCopiedToClipboard] = useState(false);\n\n  useEffect(() => {\n    setParams({\n      contentType: params.contentType || 'application/json',\n      headerDate: params.headerDate || new Date().toUTCString(),\n      method: params.method || 'POST',\n      partnerSecret: params.partnerSecret || '',\n      requestBody: params.requestBody || `{\"foo\":\"bar\",\"baz\":\"lol\",\"kek\":168}`,\n      requestUrl: params.requestUrl || '/relative-path',\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const computeResults = useCallback(() => {\n    if (!params.partnerSecret) {\n      return;\n    }\n\n    setErrors([]);\n\n    setResult(\n      generateHmacSignature(\n        params.method as string,\n        params.contentType as string,\n        params.headerDate as string,\n        params.requestUrl as string,\n        params.requestBody as string,\n        params.partnerSecret as string,\n      ),\n    );\n  }, [params]);\n\n  useEffect(() => {\n    computeResults();\n  }, [computeResults, params]);\n\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\n  ) => {\n    const newParams = { ...params, [e.target.name]: e.target.value };\n    setParams(newParams);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!params.partnerSecret) {\n      setErrors([...errors, 'Please enter secret.']);\n      return;\n    }\n\n    computeResults();\n  };\n\n  const handleCopyClick = () => {\n    setCopiedToClipboard(true);\n\n    setTimeout(() => {\n      setCopiedToClipboard(false);\n    }, 2000);\n  };\n\n  const curlCommand = `\ncurl -X '${params.method}' '<HOST>${params.requestUrl}' \\\\\n  -H 'Authorization: <PARTNER_ID>:${result.hmacDigest}' \\\\\n  -H 'Content-Type: ${params.contentType}' \\\\\n  -H 'Date: ${params.headerDate}' \\\\\n  -d '${params.method === 'GET' ? '' : params.requestBody}'\n`;\n\n  return (\n    <>\n      <h1>HMAC Calculator</h1>\n      <form>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"partner-secret\">\n            Secret\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"partner-secret\"\n              name=\"partnerSecret\"\n              onChange={handleChange}\n              required\n              type=\"text\"\n              value={params.partnerSecret}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"method\">\n            Method\n          </label>\n          <div className=\"col-sm-8\">\n            <select\n              className=\"custom-select\"\n              id=\"method\"\n              name=\"method\"\n              onChange={handleChange}\n              value={params.method}\n            >\n              <option value=\"POST\">POST</option>\n              <option value=\"GET\">GET</option>\n              <option value=\"PUT\">PUT</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"content-type\">\n            Header Content Type\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"content-type\"\n              name=\"contentType\"\n              onChange={handleChange}\n              type=\"text\"\n              value={params.contentType}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"header-date\">\n            Header Date\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"header-date\"\n              name=\"headerDate\"\n              onChange={handleChange}\n              type=\"text\"\n              value={params.headerDate}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"request-url\">\n            Request URL\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"request-url\"\n              name=\"requestUrl\"\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"/relative-path\"\n              value={params.requestUrl}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"request-body\">\n            Request Body\n            <br />\n            (JSON stringified)\n          </label>\n          <div className=\"col-sm-8\">\n            <textarea\n              className=\"form-control monospace\"\n              id=\"request-body\"\n              name=\"requestBody\"\n              onChange={handleChange}\n              rows={3}\n              value={params.requestBody}\n            />\n          </div>\n        </div>\n        <button\n          className=\"btn btn-primary\"\n          id=\"submit-btn\"\n          onClick={handleSubmit}\n          type=\"button\"\n        >\n          Calculate HMAC\n        </button>\n        {errors.map(error => (\n          <div className=\"error\">{error}</div>\n        ))}\n        <hr />\n        <h3>Result</h3>\n        <pre>\n          <code>\n            HMAC:{' '}\n            {result.hmacDigest && (\n              <span className=\"break-word-container result\">\n                {result.hmacDigest}\n              </span>\n            )}\n          </code>\n          <br />\n          <br />\n          <code>\n            Hashed payload:{' '}\n            {params.method === 'GET' ? 'N/A' : result.hashedPayload}\n          </code>\n          <br />\n          <br />\n          <code>\n            Request data:\n            <br />\n            {result.requestData}\n          </code>\n        </pre>\n        <h3>\n          CURL{' '}\n          <CopyToClipboard onCopy={handleCopyClick} text={curlCommand}>\n            <button className=\"btn btn-link\" onClick={e => e.preventDefault()}>\n              {copiedToClipboard ? 'Copied!' : 'Copy to clipboard'}\n            </button>\n          </CopyToClipboard>\n        </h3>\n        <pre>\n          <code\n            dangerouslySetInnerHTML={{\n              __html: curlCommand.replace(/</g, '&lt;').replace(/>/g, '&gt;'),\n            }}\n          />\n        </pre>\n      </form>\n    </>\n  );\n};\n\nexport default HmacCalculatorPage;\n","import CryptoJS from 'crypto-js';\n\nexport default function generateHmacSignature(\n  method: string,\n  headerContentType: string,\n  headerDate: string,\n  requestUrl: string,\n  requestBody: string,\n  partnerSecret: string,\n) {\n  if (method === 'GET' || !requestBody) {\n    requestBody = '';\n  }\n\n  const hashedPayload = requestBody\n    ? CryptoJS.enc.Base64.stringify(CryptoJS.SHA256(requestBody))\n    : '';\n\n  const requestData = [\n    [method, headerContentType, headerDate, requestUrl, hashedPayload].join(\n      '\\n',\n    ),\n    '\\n',\n  ].join('');\n\n  const hmacDigest = CryptoJS.enc.Base64.stringify(\n    CryptoJS.HmacSHA256(requestData, partnerSecret),\n  );\n\n  return { hashedPayload, requestData, hmacDigest };\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useQueryParams, StringParam } from 'use-query-params';\n\nimport generatePopSignature, {\n  Payload,\n} from '../../utils/generatePopSignature';\n\ninterface Result {\n  message: string;\n  payload: Payload;\n  popSignature: string;\n}\n\nconst PopSignaturePage = () => {\n  const [params, setParams] = useQueryParams({\n    accessToken: StringParam,\n    date: StringParam,\n    clientSecret: StringParam,\n  });\n\n  const [result, setResult] = useState<Result>({\n    message: '',\n    payload: { sig: '', time_since_epoch: 0 },\n    popSignature: '',\n  });\n\n  const [errors, setErrors] = useState<string[]>([]);\n\n  useEffect(() => {\n    setParams({\n      accessToken: params.accessToken || '',\n      clientSecret: params.clientSecret || '',\n      date: params.date || new Date().toUTCString(),\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const validate = useCallback(() => {\n    const rules: Array<{\n      key: 'accessToken' | 'clientSecret';\n      label: string;\n    }> = [\n      { key: 'clientSecret', label: 'Secret' },\n      { key: 'accessToken', label: 'Access Token' },\n    ];\n\n    const newErrors: string[] = [];\n\n    rules.forEach(({ key, label }) => {\n      if (!params[key]) {\n        newErrors.push(`Please enter ${label}.`);\n      }\n    });\n\n    return newErrors;\n  }, [params]);\n\n  const computeResults = useCallback(() => {\n    const newErrors = validate();\n\n    if (errors.length) {\n      setErrors(newErrors);\n    }\n\n    if (newErrors.length) {\n      return;\n    }\n\n    setResult(\n      generatePopSignature(\n        params.accessToken as string,\n        params.date as string,\n        params.clientSecret as string,\n      ),\n    );\n  }, [errors, params, validate]);\n\n  useEffect(() => {\n    computeResults();\n  }, [computeResults, params]);\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    const newParams = { ...params, [e.target.name]: e.target.value };\n    setParams(newParams);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const newErrors = validate();\n\n    if (newErrors) {\n      setErrors(newErrors);\n      return;\n    }\n\n    computeResults();\n  };\n\n  return (\n    <>\n      <h1>POP Signature Calculator</h1>\n      <form>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"client-secret\">\n            Client Secret\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"client-secret\"\n              name=\"clientSecret\"\n              onChange={handleChange}\n              required\n              type=\"text\"\n              value={params.clientSecret}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"date\">\n            Header Date\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"date\"\n              name=\"date\"\n              onChange={handleChange}\n              type=\"text\"\n              value={params.date}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"access-token\">\n            Access Token\n          </label>\n          <div className=\"col-sm-8\">\n            <textarea\n              className=\"form-control monospace\"\n              id=\"access-token\"\n              name=\"accessToken\"\n              onChange={handleChange}\n              rows={13}\n              value={params.accessToken}\n            />\n          </div>\n        </div>\n        <button\n          className=\"btn btn-primary\"\n          id=\"submit-btn\"\n          onClick={handleSubmit}\n          type=\"button\"\n        >\n          Calculate HMAC\n        </button>\n        {errors.map(error => (\n          <div className=\"error\" key={error}>\n            {error}\n          </div>\n        ))}\n        <hr />\n        <h3>Result</h3>\n        <pre>\n          <code>\n            Signature:\n            <br />\n            {result.popSignature && (\n              <span className=\"break-word-container result\">\n                {result.popSignature}\n              </span>\n            )}\n          </code>\n          <br />\n          <br />\n          <code>\n            Message:\n            <br />\n            {result.message && (\n              <span className=\"break-word-container\">{result.message}</span>\n            )}\n          </code>\n          <br />\n          <br />\n          <code>\n            time_since_epoch:{' '}\n            {result.payload ? result.payload.time_since_epoch : ''}\n          </code>\n          <br />\n          <br />\n          <code>sig: {result.payload ? result.payload.sig : ''}</code>\n        </pre>\n      </form>\n    </>\n  );\n};\n\nexport default PopSignaturePage;\n","import React from 'react';\nimport {\n  Link,\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\n\nimport HmacCalculatorPage from './containers/HmacCalculatorPage';\nimport PopSignaturePage from './containers/PopSignaturePage';\n\nconst App = () => {\n  return (\n    <Router basename=\"/gp-tools-frontend\">\n      <QueryParamProvider ReactRouterRoute={Route}>\n        <Link to=\"/hmac\">HMAC Calculator</Link> |{' '}\n        <Link to=\"/pop-signature\">POP Signature Calculator</Link>\n        <Switch>\n          <Route path=\"/hmac\" component={HmacCalculatorPage} />\n          <Route path=\"/pop-signature\" component={PopSignaturePage} />\n          <Redirect to=\"/hmac\" />\n        </Switch>\n      </QueryParamProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}